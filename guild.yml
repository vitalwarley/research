- model: scl
  operations:
    train:
      description: Supervised Contrastive Learning experiments
      exec: python tasks/scl.py fit --config scl.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/scl.yml
      output-scalars: '(\key)=(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - file: configs/scl.yml
          target-type: link
    val:
      description: Supervised Contrastive Learning experiments
      exec: python tasks/scl.py validate --config scl.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/scl.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - file: configs/scl.yml
          target-type: link
        - operation: scl:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    test:
      description: Supervised Contrastive Learning experiments
      exec: python tasks/scl.py test --config scl.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/scl.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - operation: scl:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    tri_subject_train:
      description: Supervised Contrastive Learning experiments
      exec: python tasks/scl_t2.py fit --config scl_t2.yml
      sourcecode:
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/scl_t2.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
    tri_subject_test:
      description: Supervised Contrastive Learning experiments
      exec: python tasks/scl_t2.py test --config scl_t2.yml
      sourcecode:
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/scl_t2.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - operation: scl:tri_subject_train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    search_retrieval:
      description: Supervised Contrastive Learning experiments
      exec: python tasks/scl.py predict --config scl_t3.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/scl_t3.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
          rename: data
        - operation: scl:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    kinface_ft:
      description: KinFace fine-tuning experiments
      exec: python tasks/scl.py fit --config kinface.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/kinface.yml
      output-scalars: '(\key)=(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - file: configs/kinface.yml
          target-type: link
        - operation: scl:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    kinface_ce:
      description: KinFace cross-eval experiments
      exec: python tasks/scl.py fit --config kinface.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/kinface.yml
      output-scalars: '(\key)=(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - file: configs/kinface.yml
          target-type: link

- model: facornet
  operations:
    train:
      description: FaCoRNet experiments
      exec: python tasks/facornet.py fit --config facornet.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/facornet.yml
      output-scalars: '(\key)=(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - file: configs/facornet.yml
          target-type: link
    kinface_ft:
      description: KinFace fine-tuning experiments
      exec: python tasks/facornet.py fit --config kinface.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/kinface.yml
      output-scalars: '(\key)=(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - file: configs/kinface.yml
          target-type: link
        - operation: facornet:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    val:
      description: FaCoRNet validation
      exec: python tasks/facornet.py validate --config facornet.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/facornet.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - file: configs/facornet.yml
          target-type: link
        - operation: facornet:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    test:
      description: FaCoRNet testing
      exec: python tasks/facornet.py test --config facornet.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/facornet.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - operation: facornet:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    tri_subject_train:
      description: FaCoRNet tri-subject training
      exec: python tasks/facornet.py fit --config facornet_t2.yml
      sourcecode:
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/facornet_t2.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
    tri_subject_test:
      description: FaCoRNet tri-subject testing
      exec: python tasks/facornet_t2.py test --config facornet_t2.yml
      sourcecode:
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/facornet_t2.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
        - operation: facornet:tri_subject_train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
    search_retrieval:
      description: FaCoRNet search and retrieval
      exec: python tasks/facornet.py predict --config facornet_t3.yml
      sourcecode:
        - utils.py
        - losses/*.py
        - models/*.py
        - models/insightface
        - datasets/*.py
        - tasks/*.py
      flags-import: all
      flags-dest: config:configs/facornet_t3.yml
      output-scalars: '(\key):\s+(\value)'
      requires:
        - file: models/insightface
          target-type: link
          rename: models/insightface
        - file: weights
          target-type: link
        - file: data/
          target-type: link
          rename: data
        - operation: facornet:train
          select: exp/checkpoints/.*\.(\d+)\.ckpt
          rename: exp/checkpoints/best.ckpt
